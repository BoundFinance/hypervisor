/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestRouter, TestRouterInterface } from "../TestRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "pool",
        type: "address",
      },
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "amountSpecified",
        type: "int256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610abb806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80635b71a46e14610051578063b8cca34e1461009e578063d3487997146100f0578063fa461e331461016e575b600080fd5b6100856004803603606081101561006757600080fd5b506001600160a01b03813516906020810135151590604001356101ea565b6040805192835260208301919091528051918290030190f35b610085600480360360808110156100b457600080fd5b5080356001600160a01b0316906020810135600290810b91604081013590910b90606001356fffffffffffffffffffffffffffffffff16610354565b61016c6004803603606081101561010657600080fd5b81359160208101359181019060608101604082013564010000000081111561012d57600080fd5b82018360208201111561013f57600080fd5b8035906020019184600183028401116401000000008311171561016157600080fd5b50909250905061059c565b005b61016c6004803603606081101561018457600080fd5b8135916020810135918101906060810160408201356401000000008111156101ab57600080fd5b8201836020820111156101bd57600080fd5b803590602001918460018302840111640100000000831117156101df57600080fd5b5090925090506105ae565b600080846001600160a01b031663128acb083386868861021e5773fffd8963efd1fc6a506488495d951d5263988d25610225565b6401000276a45b3360405160200180826001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b031681526020018515158152602001848152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102c65781810151838201526020016102ae565b50505050905090810190601f1680156102f35780820380516001836020036101000a031916815260200191505b5096505050505050506040805180830381600087803b15801561031557600080fd5b505af1158015610329573d6000803e3d6000fd5b505050506040513d604081101561033f57600080fd5b50805160209091015190969095509350505050565b6000806000866001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561039257600080fd5b505afa1580156103a6573d6000803e3d6000fd5b505050506040513d60208110156103bc57600080fd5b50519050600281810b9087900b816103d057fe5b0760020b156104105760405162461bcd60e51b815260040180806020018281038252602b815260200180610a09602b913960400191505060405180910390fd5b8060020b8560020b8161041f57fe5b0760020b1561045f5760405162461bcd60e51b815260040180806020018281038252602b815260200180610a5a602b913960400191505060405180910390fd5b6040805133602080830182905283518084038201815283850194859052633c8a7d8d60e01b9094526044830182815260028b810b60648601528a900b60848501526fffffffffffffffffffffffffffffffff891660a485015260a060c48501908152855160e486015285516001600160a01b038e1696633c8a7d8d968e958e958e959394909392610104019185019080838360005b8381101561050c5781810151838201526020016104f4565b50505050905090810190601f1680156105395780820380516001836020036101000a031916815260200191505b5096505050505050506040805180830381600087803b15801561055b57600080fd5b505af115801561056f573d6000803e3d6000fd5b505050506040513d604081101561058557600080fd5b508051602090910151909890975095505050505050565b6105a8848484846105ea565b50505050565b60008085136105be5760006105c0565b845b905060008085136105d25760006105d4565b845b90506105e2828286866105ea565b505050505050565b336000838360208110156105fd57600080fd5b5060408051630dfe168160e01b815290516001600160a01b0392358316935061068b92849233928b92881691630dfe1681916004808301926020929190829003018186803b15801561064e57600080fd5b505afa158015610662573d6000803e3d6000fd5b505050506040513d602081101561067857600080fd5b50516001600160a01b03169291906106ca565b6105e2813387856001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561064e57600080fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b1790526105a89085906000610789826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107ea9092919063ffffffff16565b8051909150156107e5578080602001905160208110156107a857600080fd5b50516107e55760405162461bcd60e51b815260040180806020018281038252602a815260200180610a85602a913960400191505060405180910390fd5b505050565b60606107f98484600085610803565b90505b9392505050565b6060824710156108445760405162461bcd60e51b8152600401808060200182810382526026815260200180610a346026913960400191505060405180910390fd5b61084d8561095e565b61089e576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106108dc5780518252601f1990920191602091820191016108bd565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461093e576040519150601f19603f3d011682016040523d82523d6000602084013e610943565b606091505b5091509150610953828286610964565b979650505050505050565b3b151590565b606083156109735750816107fc565b8251156109835782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109cd5781810151838201526020016109b5565b50505050905090810190601f1680156109fa5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe7469636b4c6f776572206d7573742062652061206d756c7469706c65206f66207469636b53706163696e67416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c7469636b5570706572206d7573742062652061206d756c7469706c65206f66207469636b53706163696e675361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a164736f6c6343000706000a";

export class TestRouter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestRouter> {
    return super.deploy(overrides || {}) as Promise<TestRouter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestRouter {
    return super.attach(address) as TestRouter;
  }
  connect(signer: Signer): TestRouter__factory {
    return super.connect(signer) as TestRouter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestRouterInterface {
    return new utils.Interface(_abi) as TestRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestRouter {
    return new Contract(address, _abi, signerOrProvider) as TestRouter;
  }
}
